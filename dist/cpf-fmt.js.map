{"version":3,"sources":["../node_modules/html-escaper/esm/index.js","core/mergeOptions.ts","../node_modules/@lacussoft/num-only/src/index.js","core/cpfFmt.ts","dist.js"],"names":["replace","ca","es","esca","unes","escape","call","pe","unescape","un","cape","m","window","cpfFmt","require","default"],"mappings":"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","file":"cpf-fmt.js","sourceRoot":"..\\src","sourcesContent":["/**\n * Copyright (C) 2017-present by Andrea Giammarchi - @WebReflection\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nvar replace = ''.replace;\n\nvar ca = /[&<>'\"]/g;\nvar es = /&(?:amp|#38|lt|#60|gt|#62|apos|#39|quot|#34);/g;\n\nvar esca = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  \"'\": '&#39;',\n  '\"': '&quot;'\n};\nvar unes = {\n  '&amp;': '&',\n  '&#38;': '&',\n  '&lt;': '<',\n  '&#60;': '<',\n  '&gt;': '>',\n  '&#62;': '>',\n  '&apos;': \"'\",\n  '&#39;': \"'\",\n  '&quot;': '\"',\n  '&#34;': '\"'\n};\n\nexport function escape(es) {\n  return replace.call(es, ca, pe);\n};\n\nexport function unescape(un) {\n  return replace.call(un, es, cape);\n};\n\nfunction pe(m) {\n  return esca[m];\n}\n\nfunction cape(m) {\n  return unes[m];\n}\n","/* eslint-disable max-len */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable indent */\r\nimport { CpfFormatingOptions } from './CpfFormatingOptions'\r\n\r\n/**\r\n * Merge custom options to default ones\r\n *\r\n * @param {CpfFormatingOptions} options\r\n * @return {CpfFormatingOptions}\r\n */\r\nexport default function mergeOptions(options: CpfFormatingOptions) {\r\n\r\n  let {\r\n    delimiters: { dot = '.', dash = '-' } = {},\r\n    hiddenRange: { start = 3, end = 10, } = {},\r\n    hiddenKey = '*',\r\n    hidden = false,\r\n    escape = false,\r\n    onFail = (value: string) => {\r\n      throw new EvalError(`'${value}' cannot be resolved to a CPF numeric sequence (11 digits)`)\r\n    },\r\n  } = options\r\n\r\n  if (hidden) {\r\n\r\n    if (Number(start) === NaN || start < 0 || start > 10) {\r\n      throw new TypeError('Option \\'hiddenRange.start\\' must be a callbacknumber between 0 and 10.')\r\n    }\r\n\r\n    if (Number(end) === NaN || end < 0 || end > 10) {\r\n      throw new TypeError('Option \\'hiddenRange.end\\' must be a callbacknumber between 0 and 10.')\r\n    }\r\n\r\n    if (start > end) {\r\n      start = start ^end\r\n      end = start ^end\r\n      start = start ^end\r\n    }\r\n  }\r\n\r\n  if (typeof(onFail) !== 'function') {\r\n    throw new TypeError('The option \\'onFail\\' must be a callback function.')\r\n  }\r\n\r\n  return {\r\n    delimiters: { dot, dash },\r\n    hiddenRange: { start, end },\r\n    hiddenKey,\r\n    hidden,\r\n    escape,\r\n    onFail,\r\n  }\r\n}\r\n","/**\r\n * Removes any non-numeric character from a string chaing\r\n *\r\n * @param {string} target\r\n * @returns {string} - Target string you want to clear from NaN characters\r\n */\r\nmodule.exports = function(target) {\r\n\r\n  return String(target).replace(/\\D/g, '')\r\n}\r\n","/* eslint-disable indent */\r\n// eslint-disable-next-line no-unused-vars\r\nimport { CpfFormatingOptions } from './CpfFormatingOptions'\r\nimport html from 'html-escaper'\r\nimport mergeOptions from './mergeOptions'\r\nimport numOnly from '@lacussoft/num-only'\r\n\r\n/**\r\n * Validate a given CPF (Brazilian ID document) char sequence\r\n *\r\n * @param {string} cpfString\r\n * @param {object} options\r\n * @return {string}\r\n */\r\nexport default function(cpfString: string, options: CpfFormatingOptions = {}) {\r\n\r\n  const cpfNumbers: string = numOnly(cpfString)\r\n  const finalOptions = mergeOptions(options)\r\n\r\n  if (cpfNumbers.length !== 11) {\r\n    return finalOptions.onFail(cpfString)\r\n  }\r\n\r\n  const cpfArray: string[] = [...cpfNumbers]\r\n\r\n  if (finalOptions.hidden) {\r\n    // eslint-disable-next-line max-len\r\n    for (let i = finalOptions.hiddenRange.start; i <= finalOptions.hiddenRange.end; i++) {\r\n      cpfArray[i] = finalOptions.hiddenKey\r\n    }\r\n  }\r\n\r\n  cpfArray.splice(9, 0, finalOptions.delimiters.dash)\r\n  cpfArray.splice(6, 0, finalOptions.delimiters.dot)\r\n  cpfArray.splice(3, 0, finalOptions.delimiters.dot)\r\n  const cpfFormat = cpfArray.join('')\r\n\r\n  if (finalOptions.escape) {\r\n    return html.escape(cpfFormat)\r\n  }\r\n\r\n  return cpfFormat\r\n}\r\n","window.cpfFmt = require('./core/cpfFmt.ts').default\n"]}